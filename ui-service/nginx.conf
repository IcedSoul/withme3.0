worker_processes  5;  ## Default: 1
# error_log  logs/error.log;
# pid        logs/nginx.pid;
worker_rlimit_nofile 8192;

events {
  worker_connections  4096;  ## Default: 1024
}

http {
  include    mime.types;
  #include    /etc/nginx/proxy.conf;
  #include    /etc/nginx/fastcgi.conf;
  #index    index.html index.htm index.php;

  default_type application/octet-stream;
  #log_format   main '$remote_addr - $remote_user [$time_local]  $status '
  #  '"$request" $body_bytes_sent "$http_referer" '
  #  '"$http_user_agent" "$http_x_forwarded_for"';
  #access_log   logs/access.log  main;
  sendfile     on;
  #tcp_nopush   on;
  server_names_hash_bucket_size 128; # this seems to be required for some vhosts

  #server { # php/fastcgi
  #  listen       80;
  #  server_name  domain1.com www.domain1.com;
  #  access_log   logs/domain1.access.log  main;
  #  root         html;

  #  location ~ \.php$ {
  #    fastcgi_pass   127.0.0.1:1025;
  #  }
  #}

  server { # simple reverse-proxy
    listen       8081;
    #server_name  domain2.com www.domain2.com;
    #access_log   logs/domain2.access.log  main;

    # serve static files
    # location ~ ^/(images|javascript|js|css|flash|media|static|html)/  {
    #   root    /usr/share/nginx/html;
    # }
    location = / {
        root /usr/share/nginx/html;
        index index.html;
    }

    location ~ ^\S*\.(html|css|js|png|jpg|gif|ico)$ {
        root /usr/share/nginx/html;
    }


    # pass requests for dynamic content to rails/turbogears/zope, et al

    location ~ /v1/userRelations {
      proxy_pass      http://user-relation-service:8081;
    }

    location ~ /v1/user {
      proxy_pass      http://user-service:8081;
    }

    location ~ /v1/offlineMessages {
      proxy_pass      http://offline-message-service:8081;
    }

    location ~ /v1/groupMessages {
      proxy_pass      http://group-message-service:8081;
    }

    location ~ /v1/message {
      proxy_pass      http://message-service:8081;
    }

    #location ~ /v1/groupMessage {
    #  proxy_pass      http://group-message-service:8081;
    #}

    location ~ /v1/group {
      proxy_pass      http://group-service:8081;
    }

  }

   map $http_upgrade $connection_upgrade {
         default upgrade;
         '' close;
   }

  upstream ws_server {
    server websocket-server-service:8282;
  #  server 127.0.0.3:8001 weight=5;
  #  server 192.168.0.1:8000;
  #  server 192.168.0.1:8001;
  }

  server { # simple load balancing
    listen          8282;
  # server_name     websocket-server-service;
  #  access_log      logs/big.server.access.log main;

    location / {
      proxy_pass      http://ws_server;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_read_timeout 86400;
    }
  }
}
