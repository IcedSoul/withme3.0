apiVersion: apps/v1
kind: Deployment
metadata:
  name: group-message-mysql
spec:
  selector:
    matchLabels:
      app: group-message-mysql
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: group-message-mysql
    spec:
      containers:
        - args:
            - --character-set-server=utf8mb4
            - --collation-server=utf8mb4_unicode_ci
          env:
            - name: MYSQL_DATABASE
              value: group_message
            - name: MYSQL_ROOT_PASSWORD
              value: root
          image: mysql:5.6
          name: group-message-mysql
          ports:
            - containerPort: 3306
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 500Mi
      #          volumeMounts:
      #            - mountPath: /var/lib/mysql
      #              name: group-message-mysql-claim0
      restartPolicy: Always
#      volumes:
#        - name: group-message-mysql-claim0
#          persistentVolumeClaim:
#            claimName: group-message-mysql-claim0

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: group-mysql
spec:
  selector:
    matchLabels:
      app: group-mysql
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: group-mysql
    spec:
      containers:
        - args:
            - --character-set-server=utf8mb4
            - --collation-server=utf8mb4_unicode_ci
          env:
            - name: MYSQL_DATABASE
              value: group
            - name: MYSQL_ROOT_PASSWORD
              value: root
          image: mysql:5.6
          name: group-mysql
          ports:
            - containerPort: 3306
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 500Mi
      #          volumeMounts:
      #            - mountPath: /var/lib/mysql
      #              name: group-mysql-claim0
      restartPolicy: Always
#      volumes:
#        - name: group-mysql-claim0
#          persistentVolumeClaim:
#            claimName: group-mysql-claim0

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: message-mysql
spec:
  selector:
    matchLabels:
      app: message-mysql
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: message-mysql
    spec:
      containers:
        - args:
            - --character-set-server=utf8mb4
            - --collation-server=utf8mb4_unicode_ci
          env:
            - name: MYSQL_DATABASE
              value: message
            - name: MYSQL_ROOT_PASSWORD
              value: root
          image: mysql:5.6
          name: message-mysql
          ports:
            - containerPort: 3306
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 500Mi
      #          volumeMounts:
      #            - mountPath: /var/lib/mysql
      #              name: message-mysql-claim0
      restartPolicy: Always
#      volumes:
#        - name: message-mysql-claim0
#          persistentVolumeClaim:
#            claimName: message-mysql-claim0

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: offline-message-mysql
spec:
  selector:
    matchLabels:
      app: offline-message-mysql
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: offline-message-mysql
    spec:
      containers:
        - args:
            - --character-set-server=utf8mb4
            - --collation-server=utf8mb4_unicode_ci
          env:
            - name: MYSQL_DATABASE
              value: offline_message
            - name: MYSQL_ROOT_PASSWORD
              value: root
          image: mysql:5.6
          name: offline-message-mysql
          ports:
            - containerPort: 3306
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 500Mi
      #          volumeMounts:
      #            - mountPath: /var/lib/mysql
      #              name: offline-message-mysql-claim0
      restartPolicy: Always
#      volumes:
#        - name: offline-message-mysql-claim0
#          persistentVolumeClaim:
#            claimName: offline-message-mysql-claim0

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-mysql
spec:
  selector:
    matchLabels:
      app: user-mysql
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: user-mysql
    spec:
      containers:
        - args:
            - --character-set-server=utf8mb4
            - --collation-server=utf8mb4_unicode_ci
          env:
            - name: MYSQL_DATABASE
              value: user
            - name: MYSQL_ROOT_PASSWORD
              value: root
          image: mysql:5.6
          name: user-mysql
          ports:
            - containerPort: 3306
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 500Mi
      #          volumeMounts:
      #            - mountPath: /var/lib/mysql
      #              name: user-mysql-claim0
      restartPolicy: Always
#      volumes:
#        - name: user-mysql-claim0
#          persistentVolumeClaim:
#            claimName: user-mysql-claim0

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-relation-mysql
spec:
  selector:
    matchLabels:
      app: user-relation-mysql
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: user-relation-mysql
    spec:
      containers:
        - args:
            - --character-set-server=utf8mb4
            - --collation-server=utf8mb4_unicode_ci
          env:
            - name: MYSQL_DATABASE
              value: user_relation
            - name: MYSQL_ROOT_PASSWORD
              value: root
          image: mysql:5.6
          name: user-relation-mysql
          ports:
            - containerPort: 3306
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 500Mi
      #          volumeMounts:
      #            - mountPath: /var/lib/mysql
      #              name: user-relation-mysql-claim0
      restartPolicy: Always
#      volumes:
#        - name: user-relation-mysql-claim0
#          persistentVolumeClaim:
#            claimName: user-relation-mysql-claim0

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: group-message-mysql
  name: group-message-mysql
spec:
  ports:
    - name: "3311"
      port: 3306
      targetPort: 3306
  selector:
    app: group-message-mysql

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: group-mysql
  name: group-mysql
spec:
  ports:
    - name: "3310"
      port: 3306
      targetPort: 3306
  selector:
    app: group-mysql

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: message-mysql
  name: message-mysql
spec:
  ports:
    - name: "3309"
      port: 3306
      targetPort: 3306
  selector:
    app: message-mysql

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: offline-message-mysql
  name: offline-message-mysql
spec:
  ports:
    - name: "3312"
      port: 3306
      targetPort: 3306
  selector:
    app:  offline-message-mysql

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: user-mysql
  name: user-mysql
spec:
  ports:
    - name: "3307"
      port: 3306
      targetPort: 3306
  selector:
    app: user-mysql


---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: user-relation-mysql
  name: user-relation-mysql
spec:
  ports:
    - name: "3308"
      port: 3306
      targetPort: 3306
  selector:
    app: user-relation-mysql

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: group-message-service
spec:
  selector:
    matchLabels:
      app: group-message-service
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        armsPilotAutoEnable: "on"
        armsPilotCreateAppName: "group-message-service"
      labels:
        app: group-message-service
    spec:
      containers:
        - image: icedsoul/group-message-service
          name: group-message-service
          ports:
            - containerPort: 8081
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 500Mi
      restartPolicy: Always
      imagePullSecrets:
        - name: withme-vpc

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: group-service
spec:
  selector:
    matchLabels:
      app: group-service
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        armsPilotAutoEnable: "on"
        armsPilotCreateAppName: "group-service"
      labels:
        app: group-service
    spec:
      containers:
        - image: icedsoul/group-service
          name: group-service
          ports:
            - containerPort: 8081
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 500Mi
      restartPolicy: Always
      imagePullSecrets:
        - name: withme-vpc


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: message-service
spec:
  selector:
    matchLabels:
      app: message-service
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        armsPilotAutoEnable: "on"
        armsPilotCreateAppName: "message-service"
      labels:
        app: message-service
    spec:
      containers:
        - image: icedsoul/message-service
          name: message-service
          ports:
            - containerPort: 8081
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 500Mi
      restartPolicy: Always
      imagePullSecrets:
        - name: withme-vpc

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: offline-message-service
spec:
  selector:
    matchLabels:
      app: offline-message-service
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        armsPilotAutoEnable: "on"
        armsPilotCreateAppName: "offline-message-service"
      labels:
        app: offline-message-service
    spec:
      containers:
        - image: icedsoul/offline-message-service
          name: offline-message-service
          ports:
            - containerPort: 8081
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 500Mi
      restartPolicy: Always
      imagePullSecrets:
        - name: withme-vpc

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ui-service
spec:
  selector:
    matchLabels:
      app: ui-service
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        armsPilotAutoEnable: "on"
        armsPilotCreateAppName: "ui-service"
      labels:
        app: ui-service
    spec:
      containers:
        - image: icedsoul/ui-service
          imagePullPolicy: Always
          name: ui-service
          ports:
            - containerPort: 8081
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 500Mi
      restartPolicy: Always
      imagePullSecrets:
        - name: withme-vpc

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-relation-service
spec:
  selector:
    matchLabels:
      app: user-relation-service
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        armsPilotAutoEnable: "on"
        armsPilotCreateAppName: "user-relation-service"
      labels:
        app: user-relation-service
    spec:
      containers:
        - image: icedsoul/user-relation-service
          name: user-relation-service
          ports:
            - containerPort: 8081
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 500Mi
      restartPolicy: Always
      imagePullSecrets:
        - name: withme-vpc


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
spec:
  selector:
    matchLabels:
      app: user-service
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        armsPilotAutoEnable: "on"
        armsPilotCreateAppName: "user-service"
      labels:
        app: user-service
    spec:
      containers:
        - image: icedsoul/user-service
          name: user-service
          ports:
            - containerPort: 8081
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 500Mi
      restartPolicy: Always
      imagePullSecrets:
        - name: withme-vpc

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: websocket-server-service
spec:
  selector:
    matchLabels:
      app: websocket-server-service
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        armsPilotAutoEnable: "on"
        armsPilotCreateAppName: "websocket-server-service"
      labels:
        app: websocket-server-service
    spec:
      containers:
        - image: icedsoul/websocket-server-service
          name: websocket-server-service
          ports:
            - containerPort: 8282
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 500Mi
      restartPolicy: Always
      imagePullSecrets:
        - name: withme-vpc

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: group-message-service
  name: group-message-service
spec:
  ports:
    - name: "21007"
      port: 8081
      targetPort: 8081
  selector:
    app: group-message-service



---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: group-service
  name: group-service
spec:
  ports:
    - name: "21006"
      port: 8081
      targetPort: 8081
  selector:
    app: group-service

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: message-service
  name: message-service
spec:
  ports:
    - name: "21005"
      port: 8081
      targetPort: 8081
  selector:
    app: message-service

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: offline-message-service
  name: offline-message-service
spec:
  ports:
    - name: "21008"
      port: 8081
      targetPort: 8081
  selector:
    app: offline-message-service

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: ui-service
  name: ui-service
spec:
  type: NodePort
  ports:
    - name: "80"
      port: 80
      targetPort: 8081
      nodePort: 30005
    - name: "8282"
      port: 8282
      targetPort: 8282
      nodePort: 30002
  selector:
    app: ui-service

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: user-relation-service
  name: user-relation-service
spec:
  ports:
    - name: "21004"
      port: 8081
      targetPort: 8081
  selector:
    app: user-relation-service

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: user-service
  name: user-service
spec:
  ports:
    - name: "21003"
      port: 8081
      targetPort: 8081
  selector:
    app: user-service

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: websocket-server-service
  name: websocket-server-service
spec:
  ports:
    - name: "21002"
      port: 8282
      targetPort: 8282
  selector:
    app: websocket-server-service







